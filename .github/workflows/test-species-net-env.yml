name: Test speciesnet env builder

on:
  workflow_dispatch:

jobs:
  test-env-sppnet:
    runs-on: windows-2022
    
    env:
      # remove if proven succesful after a release triggered job
      # RELEASE_VERSION: ${{ github.event_name == 'release' && github.event.release.tag_name || inputs.tag_name }}
      # BUCKET_NAME: github-release-files-storage
      CONDA_DIR: C:\Miniconda
      BRANCH_NAME: ${{ github.event_name == 'release' && 'main' || github.ref_name }}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest release tag
        id: release_info
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Set latest release tag to global
        shell: cmd
        run: |
          set RELEASE_VERSION=${{ steps.release_info.outputs.release }}
          echo RELEASE_VERSION: %RELEASE_VERSION%
          echo RELEASE_VERSION=%RELEASE_VERSION%>> %GITHUB_ENV%

      - name: Set bucket name based on chosen branch
        shell: cmd
        run: |
          echo BRANCH_NAME is %BRANCH_NAME%
          if "%BRANCH_NAME%"=="main" (
              set "BUCKET_NAME=github-release-files-storage"
          ) else (
              set "BUCKET_NAME=github-release-files-storage-beta-versions"
          )
          echo BUCKET_NAME=%BUCKET_NAME%>> %GITHUB_ENV%
          echo BUCKET_NAME is "%BUCKET_NAME%"

      - name: Install dependencies
        shell: cmd
        run: |

          echo off
          @setlocal EnableDelayedExpansion
          
          @REM init environment vars
          set envs_dir=%USERPROFILE%\envs
          set conda_exe=${{ env.CONDA_DIR }}\Scripts\conda.exe
          echo Using conda %conda_exe%

          @REM set high timeout value and ip address for ipv4 fallback issues
          call "%conda_exe%" config --set remote_connect_timeout_secs 120
          call "%conda_exe%" config --set remote_max_retries 5
          call "%conda_exe%" config --set remote_read_timeout_secs 120
          call "%conda_exe%" config --set ssl_verify False
          call "%conda_exe%" config --set fetch_threads 2
          call "%conda_exe%" config --show

          @REM set IPv4
          set PIP_NO_IPV6=1
          set CONDA_SSL_VERIFY=0
          set CONDA_USE_IPV4=1

          @REM install mamba
          call "%conda_exe%" install -n base -c conda-forge mamba -y

          @REM env-speciesnet
          call "%conda_exe%" create -p "%envs_dir%\envs\env-speciesnet" python=3.11 -y
          call "%conda_exe%" run -p "%envs_dir%\envs\env-speciesnet" pip install --timeout=120 speciesnet


          
          
